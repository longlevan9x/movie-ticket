<?php
namespace common\controllers;

use common\components\FHtml;
use frontend\components\Helper;
use Yii;
use yii\web\Controller;


class BaseFrontendController extends Controller
{
    public $mainMenu = array();
    public $uploadFolder;

    public function currentController()
    {
        return $controller = $this->getUniqueId();
    }

    public function currentAction()
    {
        return $action = $this->action->id;
    }

    public function init()
    {
        parent::init();
        $this->view->params['uploadFolder'] = $this->uploadFolder;
    }

    public function render($view, $params = [])
    {
        $view = FHtml::findView($view);

        return parent::render($view, $params); // TODO: Change the autogenerated stub
    }

    public function beforeAction($action)
    {
        $this->uploadFolder = Yii::getAlias('@' . UPLOAD_DIR);
        $this->createMenu();
        return parent::beforeAction($action);
    }

    protected function createMenu()
    {
        $controller = $this->getUniqueId();
        $action = $this->action->id;

        $this->view->params['mainMenu'] = $this->mainMenu;
    }

    public function getCategoryItemMenu($object_type, $list_url, $detail_url, $column_count = 4)
    {
        return Helper::getCategoryItemMenu($object_type, $list_url, $detail_url, $column_count);
    }

    public function getCategoryMenu($object_type, $list_url)
    {
        return Helper::getCategoryMenu($this->getUniqueId(), $this->action->id, $object_type, $list_url);
    }

    public function getArrayItemMenu($menuArrays = [])
    {
        return Helper::getArrayItemMenu($menuArrays);
    }

    public function getMegaContentV5($object_type = 'product', $controllerURL = 'product', $subItemsField = 'products', $column_count = 4)
    {
        return Helper::getMegaContentV5($object_type, $controllerURL, $subItemsField, $column_count);
    }

    public function getMegaContentV8($object_type = 'product', $controllerURL = 'category', $column_count = 4)
    {
        return Helper::getMegaContentV8($this->getUniqueId(), $this->action->id, $object_type, $controllerURL, $column_count);
    }

    public function getMegaContentV8Mix($type = 'cii', $object_type = 'product', $controllerURL = 'product', $condition = '') //$type = cii, cbi, bii c: category, b:big item, i: normal item
    {
        return Helper::getMegaContentV8Mix($type, $object_type, $controllerURL, $condition);
    }

    public function getTreeContentByCategory()
    {
        return Helper::getTreeContentByCategory($this->getUniqueId(), $this->action->id);
    }

    public function getChildrenOfCategory($item, $objects, $controller, $action, $params_id)
    {
        return Helper::getChildrenOfCategory($item, $objects, $controller, $action, $params_id);
    }
}

